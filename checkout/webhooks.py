from django.conf import settings
from django.http import HttpResponse
from django.views.decorators.http import require_POST
from django.views.decorators.csrf import csrf_exempt

from checkout.webhook_handler import StripeWH_Handler

import stripe

@require_POST
@csrf_exempt
def webhook(request):
    """Listen for webhooks from Stripe"""
    
    # Initialize Stripe API with the secret key from settings
    wh_secret = settings.STRIPE_WH_SECRET
    stripe.api_key = settings.STRIPE_SECRET_KEY
    
    # Retrieve the raw request body to get the webhook payload
    payload = request.body
    
    # Get the Stripe signature header from the request
    sig_header = request.META['HTTP_STRIPE_SIGNATURE']
    
    event = None
    try:
         # Verify the webhook signature and construct the event
        event = stripe.Webhook.construct_event(
        payload, sig_header, wh_secret
        )
    except ValueError as e:
        # Handle case where the payload is invalid JSON
        return HttpResponse(status=400)
    except stripe.error.SignatureVerificationError as e:
        # Handle case where the signature verification fails
        return HttpResponse(status=400)
    except Exception as e:
        # Handle any other exceptions
        return HttpResponse(content=e, status=400)
    
    # Create an instance of the Stripe webhook handler
    handler = StripeWH_Handler(request)
    
    # Map specific webhook event types to their respective handler methods
    event_map = {
        'payment_intent.succeeded': handler.handle_payment_intent_succeeded,
        'payment_intent.payment_failed': handler.handle_payment_intent_payment_failed,
    }
    
    # Get the event type from the Stripe event data
    event_type = event['type']
    # Retrieve the appropriate handler function from the event map, default to the generic handler
    event_handler = event_map.get(event_type, handler.handle_event)
    # Execute the handler function with the event data
    response = event_handler(event)
    
    # Return the response generated by the event handler
    return response